@using VotePlatform.Models.Votes;
@using System;
@using System.Collections.Generic;
@model MainVote
@{
    bool isAnonimousVote = Model.attributes.IsAnonimousVote;
}


@*хуеверть эти данные для разработки разных сценариев*@
@{
    //isAnonimousVote = true;
    //Model.isAvailable = true;
    //Model.type = VoteType.AloneAswer;
    //Model.isVotingAccessible = true;
    //Model.isActualResultAccessible = true;
    //Model.isDynamicResultAccessible = true;
    //Model.isCancellationPossible = false;
}
@*.............*@

@*хуеверть эти данные для того чтобы менять результаты голосования, количество цифр должно совпадать с количеством ответов в голосовании (Model.answersMetas.Count) иначе краш*@
@{
    //Model.userVoice = new List<int>() { 0, 0, 1, 0 };
    //Model.simpleResults = new List<int>() { 5, 10, 100, 500 };
    string tagCardisAvailable = "card-obsh";
}
@*.............*@

<div class="container my-5">
    <div class="row row-cols-1 row-cols-md-1 row-cols-lg-1 g-1">
        <div class="col">
            @*шапка голосования *@
            @{
                if (Model.isAvailable == false)
                {
                    tagCardisAvailable = "card-netu";
                }

                if (Model.meta.IsPinned)
                {
                    <h3>Закреплено.</h3>
                }
            }


            @*форма с ответами*@
            <form action=@Model.urlToVoting method="post">
                <div class="card @tagCardisAvailable text-start my-2">
                    <h6></h6>
                    <label class="mx-3">Голосовавших: @Model.countVoters</label>
                    <label class="mx-3">@Model.AttributesStr</label>
                    <h3 class="mx-3">@Model.meta.Header</h3>
                    <h5 class="mx-3">@Model.meta.Description</h5>
                    @{
                        for (int i = 0; i < Model.answersMetas.Count; i++)
                        {
                            //отображение текущего голоса пользователя, смотрящего страницу
                            string tagAnswerSelection = string.Empty;
                            if (Model.userVoice[i] > 0) { tagAnswerSelection = "card-voice"; }
                            <div class="card @tagAnswerSelection my-2 mx-3">

                                @{
                                    var idRes = $"{Convert.ToString(i)}";

                                    //отображение степени предпочтения
                                    if (((Model.isVotingAccessible && (Model.isCancellationPossible == false)) == false) && Model.type == VoteType.PreferVote && (Model.userVoice[i] > 0))
                                    {
                                        var preferValue = Convert.ToString(Model.userVoice[i]);
                                        <a>@preferValue</a>
                                    }

                                    //в зависимости от типа голосования берутся разные inputы
                                    if (Model.isVotingAccessible && (Model.isCancellationPossible == false))
                                    {
                                        if (Model.type == VoteType.AloneAswer)
                                        {
                                            <input style="float:left;margin:0 0%;" type="radio" id=@idRes name="vote" value=@idRes>
                                            <h4 id=@idRes>@Model.answersMetas[i].Header</h4>
                                        }
                                        else if (Model.type == VoteType.SomeAnswers)
                                        {
                                            <input style="float:left;margin:0 0%;" type="checkbox" id=@idRes name=@idRes value=@idRes>
                                            <h4 id=@idRes>@Model.answersMetas[i].Header</h4>
                                        }
                                        else if (Model.type == VoteType.PreferVote)
                                        {
                                            <input class="pos btn-sled" style="float:left;margin:0 0%;" type="number" id=@idRes name=@idRes value="0" />
                                            <h4 id=@idRes>@Model.answersMetas[i].Header</h4>
                                        }
                                    }

                                        //само тело варианта ответа

                                    <label class="card-text" for=@idRes> @Model.answersMetas[i].Description</label>

                                    //отображение актуальных результатов голосования для каждого ответа
                                    if (Model.simpleResults[i] != 0)
                                    {
                                        var res = $"{Convert.ToString(Model.simpleResults[i])} голосов";

                                        if (isAnonimousVote)
                                        {
                                            <label class="positioned">@res</label>
                                        }
                                        else
                                        {
                                            var votersRef = $"{Model.urlToVoters}{idRes}";
                                            <a class="btn btn-secondary btn-sled positioned" href=@votersRef target="_blank">@res</a>
                                        }
                                    }
                                }
                            </div>
                        }
                        //кнопка отправки голоса
                        if (Model.isVotingAccessible && (Model.isCancellationPossible == false))
                        {
                            <div>
                                <input class="btn btn-primary mx-3" type="submit" value="Проголосовать" />
                            </div>
                        }
                        //кнопка для отмены голоса лол
                        if (Model.isVotingAccessible && Model.isCancellationPossible == true)
                        {
                            <div>
                                <a class="btn btn-primary" href=@Model.cancelUrl>Отменить голос</a>
                            </div>
                        }
                        //переход на страницу с динамикой
                        if (Model.isDynamicResultAccessible)
                        {
                            <a class="btn btn-primary positioned my-4 btn-sled" href=@Model.urlToDynamic target="_blank">Показать динамику</a>
                        }
                    }
                </div>
            </form>
        </div>
    </div>
</div>