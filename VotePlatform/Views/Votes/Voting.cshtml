@using VotePlatform.Models.Votes;
@using System;
@using System.Collections.Generic;
@model MainVote
@{
    bool isAnonimousVote = Model.attributes.IsAnonimousVote;
}

@*хуеверть эти данные для разработки разных сценариев*@
@{
    //isAnonimousVote = true;
    //Model.isAvailable = true;
    //Model.type = VoteType.PreferVote;
    //Model.isVotingAccessible = true;
    //Model.isActualResultAccessible = true;
    //Model.isDynamicResultAccessible = true;
    //Model.isCancellationPossible = false;
}
@*.............*@

@*хуеверть эти данные для того чтобы менять результаты голосования, количество цифр должно совпадать с количеством ответов в голосовании (Model.answersMetas.Count) иначе краш*@
@{
    //Model.userVoice = new List<int> (){0,0,1,0};
    //Model.simpleResults =  new List<int> (){5,10,100,500};
}
@*.............*@

<div class="container my-5">
    <div class="row row-cols-1 row-cols-md-1 row-cols-lg-1 g-1">
        <div class="col">
            @*шапка голосования *@
            @{
                if (Model.isAvailable == false)
                {
                    <h1>Голосование удалено.</h1>
                }

                if (Model.meta.IsPinned)
                {
                    <h3>Закреплено.</h3>
                }
            }
            <a>Голосовавших: @Model.countVoters</a>
            <p>@Model.AttributesStr</p>
            <p>@Model.meta.Header</p>
            <p>@Model.meta.Description</p>


            @*форма с ответами*@
            <form action=@Model.urlToVoting method="post">
                <div>
                    @{
                        for (int i = 0; i < Model.answersMetas.Count; i++)
                        {
                            //отображение текущего голоса пользователя, смотрящего страницу
                            if (Model.userVoice[i] > 0)
                            {
                                <div class="card card-voice my-4">
                                    @{
                                        var idRes = $"{Convert.ToString(i)}";

                                        //в зависимости от типа голосования берутся разные inputы
                                        if (Model.isVotingAccessible)
                                        {
                                            if (Model.type == VoteType.AloneAswer)
                                            {
                                                <input type="radio" id=@idRes name="vote" value=@idRes>
                                            }
                                            else if (Model.type == VoteType.SomeAnswers)
                                            {
                                                <input type="checkbox" id=@idRes name=@idRes value=@idRes>
                                            }
                                            else if (Model.type == VoteType.PreferVote)
                                            {
                                                <input type="number" id=@idRes name=@idRes value=@idRes>
                                            }
                                        }

                                        //само тело варианта ответа
                                        <label for=@idRes> @Model.answersMetas[i].Header</label>

                                        <h2> </h2>

                                        <label for=@idRes> @Model.answersMetas[i].Description</label>

                                        //отображение актуальных результатов голосования для каждого ответа
                                        if (Model.simpleResults[0] != 0)
                                        {
                                            var res = $"{Convert.ToString(Model.simpleResults[i])} голосов.";

                                            if (isAnonimousVote)
                                            {
                                                <label>@res</label>
                                            }
                                            else
                                            {
                                                var votersRef = $"{Model.urlToVoters}{idRes}";
                                                <a class="btn btn-secondary btn-sled pos" href=@votersRef target="_blank">@res</a>
                                            }
                                        }
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="card my-4">
                                    @{
                                        var idRes = $"{Convert.ToString(i)}";

                                        //в зависимости от типа голосования берутся разные inputы
                                        if (Model.isVotingAccessible)
                                        {
                                            if (Model.type == VoteType.AloneAswer)
                                            {
                                                <input type="radio" id=@idRes name="vote" value=@idRes>
                                            }
                                            else if (Model.type == VoteType.SomeAnswers)
                                            {
                                                <input type="checkbox" id=@idRes name=@idRes value="100">
                                            }
                                            else if (Model.type == VoteType.PreferVote)
                                            {
                                                <input type="number" id=@idRes name=@idRes>
                                            }
                                        }

                                        //само тело варианта ответа
                                        <label for=@idRes> @Model.answersMetas[i].Header</label>

                                        <h2> </h2>

                                        <label for=@idRes> @Model.answersMetas[i].Description</label>

                                        //отображение актуальных результатов голосования для каждого ответа
                                        if (Model.simpleResults[i] != 0)
                                        {
                                            var res = $"{Convert.ToString(Model.simpleResults[i])} голосов.";

                                            if (isAnonimousVote)
                                            {
                                                <label>@res</label>
                                            }
                                            else
                                            {
                                                var votersRef = $"{Model.urlToVoters}{idRes}";
                                                <a class="btn btn-secondary btn-sled pos" href=@votersRef target="_blank">@res</a>
                                            }
                                        }
                                    }
                                </div>
                            }

                        }
                    }
                </div>
                @{
                    //кнопка отправки голоса
                    if (Model.isVotingAccessible && (Model.isCancellationPossible == false))
                    {
                        <div>
                            <input class="btn btn-primary" type="submit" value="Проголосовать" />
                        </div>
                    }
                }
            </form>
            @{
                //кнопка для отмены голоса лол
                if (Model.isVotingAccessible && Model.isCancellationPossible == true)
                {
                    <div>
                        <a class="btn btn-primary" href=@Model.cancelUrl>Отменить голос</a>
                    </div>
                }
                //переход на страницу с динамикой
                if (Model.isDynamicResultAccessible)
                {
                    <a class="btn btn-primary positioned my-4 btn-sled" href=@Model.urlToDynamic target="_blank">Показать динамику</a>
                }
            }
        </div>
    </div>
</div>