@using VotePlatform.Models.Votes;
@using System;
@using System.Collections.Generic;
@model MainVote
@{bool isAnonimousVote = Model.attributes.IsAnonimousVote;}

@*хуеверть эти данные для разработки разных сценариев*@
@{
    //isAnonimousVote = false;
    //Model.isAvailable = true;
    //Model.type = VoteType.PreferVote;
    //Model.isVotingAccessible = true;
    //Model.isActualResultAccessible = true;
    //Model.isDynamicResultAccessible = true;
            //Model.isCancellationPossible = false;
}
@*.............*@

@*хуеверть эти данные для того чтобы менять результаты голосования, количество цифр должно совпадать с количеством ответов в голосовании (Model.answersMetas.Count) иначе краш*@
@{
    //Model.userVoice = new List<int> (){0,0,1,0};
    //Model.simpleResults =  new List<int> (){5,10,100,500};
}
@*.............*@
@*шапка голосования *@
@{
    if (Model.isAvailable == false)
    {
        <h1>Голосование удалено.</h1>
    }

    if (Model.meta.IsPinned)
    {
        <h3>Закреплено.</h3>
    }
}
<a>Голосовавших: @Model.countVoters</a>
<h2>@Model.attributesStr</h2>
<h1>@Model.meta.Header</h1>
<h2>@Model.meta.Description</h2>


@*форма с ответами*@
<form action="/Votes/Voting?id=o1-v1" method="post">
    <div>
        @{
            for (int i = 0; i < Model.answersMetas.Count; i++)
            {
                var idRes = $"{Convert.ToString(i)}";

                //в зависимости от типа голосования берутся разные inputы
                if (Model.isVotingAccessible)
                {
                    if (Model.type == VoteType.AloneAswer)
                    {
                        <input type="radio" id=@idRes name="vote" value=@idRes>
                    }
                    else if (Model.type == VoteType.SomeAnswers)
                    {
                        <input type="checkbox" id=@idRes name=@idRes value=@idRes>
                    }
                    else if (Model.type == VoteType.PreferVote)
                    {
                        <input type="number" id=@idRes name=@idRes value=@idRes>
                    }
                }

                //отображение текущего голоса пользователя, смотрящего страницу
                if (Model.userVoice[i] > 0)
                {
                    if (Model.type == VoteType.PreferVote)
                    {
                        <a>Предпочтение: @Model.userVoice[i]</a>
                    }
                    else
                    {
                        <a>Я выбрал это.</a>
                    }
                }
                //само тело варианта ответа
                <label for=@idRes> @Model.answersMetas[i].Header</label>

                <h2> </h2>

                <label for=@idRes> @Model.answersMetas[i].Description</label>

                <h2> </h2>

                //отображение актуальных результатов голосования для каждого ответа
                if (Model.simpleResults[0] != 0)
                {
                    var res = $"{Convert.ToString(Model.simpleResults[i])} голосов.";

                    if (isAnonimousVote)
                    {
                        <label>@res</label>
                    }
                    else
                    {
                        <a href="/Votes/Vote?id =o1-v1" target="_blank">@res</a>
                    }
                    <h6> </h6>
                }
            }
        }
    </div>
    @{
        //кнопка отправки голоса
        if (Model.isVotingAccessible && Model.isCancellationPossible == false)
        {
            <div>
                <input type="submit" value="Проголосовать" />
            </div>
        }
    }

</form>
@{
    //кнопка для отмены голоса лол
    if (Model.isVotingAccessible && Model.isCancellationPossible == true)
    {
        <div>
            <a href=@Model.cancelUrl>Отменить голос</a>
        </div>
    }
    //переход на страницу с динамикой
    if (Model.isDynamicResultAccessible)
    {
        <a href=@Model.urlToDynamic target="_blank">Показать динамику</a>
    }
}


